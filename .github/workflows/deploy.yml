name: Deploy Flask Site

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Lint Check
        uses: ./.github/actions/lint

  deploy:
    name: Deploy (Production)
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://apex.goshdarnedhero.com
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: SSH - Enter maintenance mode
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd ${{ secrets.REMOTE_TARGET }}
            bin/begin_deployment.sh
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}

      - name: SSH - Create .env file
        uses: fifsky/ssh-action@master
        with:
          command: |
            cat << EOF > ${{ secrets.REMOTE_TARGET }}/.env
            APEX_LEGENDS_API_KEY=${{ secrets.APEX_LEGENDS_API_KEY }}
            MONGO_HOST=${{ secrets.MONGO_HOST }}
            MONGO_PORT=${{ secrets.MONGO_PORT }}
            MONGO_DB=${{ secrets.MONGO_DB }}
            MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}
            MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}
            LOG_LEVEL=${{ secrets.LOG_LEVEL }}
            LOG_COLLECTION=${{ secrets.LOG_COLLECTION }}
            OAUTHLIB_INSECURE_TRANSPORT=${{ secrets.OAUTHLIB_INSECURE_TRANSPORT }}
            DISCORD_CLIENT_ID=${{ secrets.DISCORD_CLIENT_ID }}
            DISCORD_CLIENT_SECRET=${{ secrets.DISCORD_CLIENT_SECRET }}
            DISCORD_REDIRECT_URI=${{ secrets.DISCORD_REDIRECT_URI }}
            FLASK_APP_SECRET_KEY=${{ secrets.FLASK_APP_SECRET_KEY }}
            VERSION=${{ env.RELEASE_VERSION }}
            EOF
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Rsync over requirements file
        uses: up9cloud/action-rsync@master
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          KEY: ${{ secrets.SERVER_SSH_KEY }}
          TARGET: ${{ secrets.REMOTE_TARGET }}/requirements.txt

          VERBOSE: true
          USER: ${{ secrets.REMOTE_USER }}
          ARGS: -avz
          SOURCE: ./requirements.txt

      - name: SSH - Create virtual env
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd ${{ secrets.REMOTE_TARGET }}
            rm -rf env
            virtualenv -p `which python3` env
            source env/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt
            rm requirements.txt
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}

      - name: Rsync flask site to production
        uses: up9cloud/action-rsync@master
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          KEY: ${{ secrets.SERVER_SSH_KEY }}
          TARGET: ${{ secrets.REMOTE_TARGET }}/flask_site/

          VERBOSE: true
          USER: ${{ secrets.REMOTE_USER }}
          ARGS: -avz --delete
          SOURCE: ./flask_site/

      - name: Rsync bin to production
        uses: up9cloud/action-rsync@master
        env:
          HOST: ${{ secrets.REMOTE_HOST }}
          KEY: ${{ secrets.SERVER_SSH_KEY }}
          TARGET: ${{ secrets.REMOTE_TARGET }}/bin/

          VERBOSE: true
          USER: ${{ secrets.REMOTE_USER }}
          ARGS: -avz --delete
          SOURCE: ./bin/

      - name: SSH - Restart db daemon
        uses: fifsky/ssh-action@master
        with:
          command: |
            cd ${{ secrets.REMOTE_TARGET }}
            bin/end_deployment.sh
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
